CREATE OR REPLACE FUNCTION shrink_large_tables(in sDate timestamp, big_size integer, only_test boolean) RETURNS boolean AS $$
DECLARE
    mviews RECORD;
	tsize text;
BEGIN
    RAISE NOTICE 'Очистка больших таблиц...';
    FOR mviews IN
       SELECT
		table_name,
		column_name,
		table_size AS table_size,
		pg_size_pretty(indexes_size) AS indexes_size,
		pg_size_pretty(total_size) AS total_size
		FROM (
			SELECT DISTINCT
			table_name AS table_name,
			column_name AS column_name,
			pg_table_size(table_name) AS table_size,
			pg_indexes_size(table_name) AS indexes_size,
			pg_total_relation_size(table_name) AS total_size
			FROM (SELECT ('"' || tb.table_schema || '"."' || tb.table_name || '"') AS table_name,
					cl.column_name AS column_name
			FROM information_schema.tables AS tb
			LEFT JOIN information_schema.columns AS cl
			 ON tb.table_name = cl.table_name and cl.data_type = 'timestamp without time zone'
			WHERE tb.table_name <> 'config'
			) AS all_tables
		ORDER BY total_size DESC
		) AS pretty_sizes
		WHERE table_size > big_size and table_name NOT ILIKE '%_referenc%' and table_name NOT ILIKE '%pg_%'
		 
    LOOP
		RAISE NOTICE 'Очистка таблицы % ...', mviews.table_name;
		BEGIN
		-- Очистка таблиц
			IF  mviews.column_name IS NULL 
				THEN
					RAISE NOTICE 'TRUNCATE %', mviews.table_name;
					IF only_test = false THEN
						EXECUTE 'TRUNCATE ' || mviews.table_name;	
					END IF;
					
				ELSE
					RAISE NOTICE 'DELETE FROM % WHERE % < timestamp ''%''', mviews.table_name, mviews.column_name,sDate ;		
					IF only_test = false THEN
						EXECUTE 'DELETE FROM ' || mviews.table_name || ' WHERE ' || mviews.column_name || ' < timestamp ''' || sDate || '''';
					END IF;	
			END IF;
			-- Очистка индексов
			RAISE NOTICE 'Очистка индексов таблицы % ...', mviews.table_name;
			IF only_test = false THEN
			EXECUTE (
				SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
				FROM   pg_index  i
				WHERE  i.indrelid = mviews.table_name::regclass 
				);
			END IF;
		EXCEPTION
			WHEN null_value_not_allowed THEN
				RAISE NOTICE 'Таблица % уже очищена', mviews.table_name;
		END;	
		-- Подсчет нового места
		EXECUTE 'SELECT pg_size_pretty( pg_table_size( '''|| mviews.table_name ||''' ) )' Into tsize;
		RAISE NOTICE 'Очищена таблица % по условию период записи % < % (от % - до %)...',
		mviews.table_name, mviews.column_name, sDate, pg_size_pretty(mviews.table_size),tsize ;	 
		
    END LOOP;
    RAISE NOTICE 'Очистка завершена...';
    RETURN 1;
	
END;
$$ LANGUAGE plpgsql;


